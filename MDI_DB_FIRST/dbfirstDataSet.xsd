<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="dbfirstDataSet" targetNamespace="http://tempuri.org/dbfirstDataSet.xsd" xmlns:mstns="http://tempuri.org/dbfirstDataSet.xsd" xmlns="http://tempuri.org/dbfirstDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="dbfirstConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="dbfirstConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.MDI_DB_FIRST.Properties.Settings.GlobalReference.Default.dbfirstConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ClasseTableAdapter" GeneratorDataComponentClassName="ClasseTableAdapter" Name="Classe" UserDataComponentName="ClasseTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dbfirstConnectionString (Settings)" DbObjectName="dbfirst.dbo.Classe" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Classe] WHERE (([id] = @Original_id) AND ([Libelle] = @Original_Libelle) AND ([Niveau] = @Original_Niveau) AND ([Specialite] = @Original_Specialite))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Libelle" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Libelle" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Niveau" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Niveau" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Specialite" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Specialite" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Classe] ([Libelle], [Niveau], [Specialite]) VALUES (@Libelle, @Niveau, @Specialite);
SELECT id, Libelle, Niveau, Specialite FROM Classe WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Libelle" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Libelle" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Niveau" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Niveau" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Specialite" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Specialite" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, Libelle, Niveau, Specialite FROM dbo.Classe</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Classe] SET [Libelle] = @Libelle, [Niveau] = @Niveau, [Specialite] = @Specialite WHERE (([id] = @Original_id) AND ([Libelle] = @Original_Libelle) AND ([Niveau] = @Original_Niveau) AND ([Specialite] = @Original_Specialite));
SELECT id, Libelle, Niveau, Specialite FROM Classe WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Libelle" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Libelle" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Niveau" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Niveau" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Specialite" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Specialite" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Libelle" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Libelle" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Niveau" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Niveau" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Specialite" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Specialite" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="dbfirst.dbo.Classe" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@id" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="Libelle" DataSetColumn="Libelle" />
              <Mapping SourceColumn="Niveau" DataSetColumn="Niveau" />
              <Mapping SourceColumn="Specialite" DataSetColumn="Specialite" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="dbfirstDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="dbfirstDataSet" msprop:Generator_DataSetName="dbfirstDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Classe" msprop:Generator_RowEvHandlerName="ClasseRowChangeEventHandler" msprop:Generator_RowDeletedName="ClasseRowDeleted" msprop:Generator_RowDeletingName="ClasseRowDeleting" msprop:Generator_RowEvArgName="ClasseRowChangeEvent" msprop:Generator_TablePropName="Classe" msprop:Generator_RowChangedName="ClasseRowChanged" msprop:Generator_RowChangingName="ClasseRowChanging" msprop:Generator_TableClassName="ClasseDataTable" msprop:Generator_RowClassName="ClasseRow" msprop:Generator_TableVarName="tableClasse" msprop:Generator_UserTableName="Classe">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_UserColumnName="id" type="xs:long" />
              <xs:element name="Libelle" msprop:Generator_ColumnPropNameInRow="Libelle" msprop:Generator_ColumnPropNameInTable="LibelleColumn" msprop:Generator_ColumnVarNameInTable="columnLibelle" msprop:Generator_UserColumnName="Libelle">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Niveau" msprop:Generator_ColumnPropNameInRow="Niveau" msprop:Generator_ColumnPropNameInTable="NiveauColumn" msprop:Generator_ColumnVarNameInTable="columnNiveau" msprop:Generator_UserColumnName="Niveau">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Specialite" msprop:Generator_ColumnPropNameInRow="Specialite" msprop:Generator_ColumnPropNameInTable="SpecialiteColumn" msprop:Generator_ColumnVarNameInTable="columnSpecialite" msprop:Generator_UserColumnName="Specialite">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Classe" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
  </xs:element>
</xs:schema>